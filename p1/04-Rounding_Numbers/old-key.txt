<?php

// Include this at the beginning of every scoring key, 
// with updated numbers for the specific number of tests in each function for that problem
$attempt->queue_tests(array(
	"Compile"   => 1,  
	"Given"     => 2,
	"Format"    => 1,
	"Standard"  => 5, 
	"Random"    => 20, 
	"Edge"      => 2,
	"All"       => 30));
	//the number of tests to be run in each PHP function.

// test_Compile ensures that the source code compiles without error	
// This will probably be exactly the same for every problem
function test_Compile($i) {
	global $attempt;
	//check and see if it compiles
	return compile($attempt->compiler.$attempt->filename); 
}

// test_Given checks that the program runs correctly for the examples given in the problem statement;
// check formatting (header line, spacing, etc.) as little as possible
function test_Given($i) {
	$in  = array("3.2\n", "3.7\n");
	$out = array("3", "4");
	return run("./a.out",$in[$i]) && output_contains("$out[$i]\n");
	
	
}

// test_Format again checks using the some of the sample data from the problem statement, 
// but also checks all formatting
function test_Format($i) {
	global $attempt;
	$attempt->hint = "Note the newline at the end of the program.";
	
	return run("./a.out","3.7\n") && output_contains_lines(<<<END
Enter a number: <span class=input>3.7</span>
The rounded number is 4

END
	);
}
               
function test_Standard($i) {
	$in = array(
		"17.2",
		"9.6",
		"123.5",
		"2.9",
		"4.1");
	$out = array(17,10,124,3,4);
	
	return run("./a.out",$in[$i]) 
		&& output_contains("$out[$i]\n"); 
	
}

function test_Random($i) {
	$base = rand(1,150); //choose base number
	$decimal = rand(1,9); //choose decimal for number
	$base += $decimal/10;
	$case = $base . "\n";
	$ans  = round($base);
	   			
   	return run("./a.out",$case) && output_contains("$ans\n");
   	
   	//creates random numbers, finds the answer, and runs those numbers through the program.   	
}

function test_Edge($i) {
	$in = array(
		"1.5\n",		 
		"15\n");  	//doesn't need rounded
	$out = array(2,15);
	
	return run("./a.out",$in[$i]) && output_contains("$out[$i]\n"); 
}

function test_All($i) {
	$base = rand(00,500); //choose base number
	$decimal1 = rand(0,29); //choose decimal for number
	$decimal2 = rand(1,30);
	$base += $decimal1/$decimal2;
	$case = $base . "\n";
	$ans  = round($base);
	   			
   	return run("./a.out",$case) && output_contains("$ans\n");
   	
   	//creates random numbers, finds the answer, and runs those numbers through the program.   	
}
