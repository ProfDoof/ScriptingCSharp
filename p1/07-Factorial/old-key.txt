<?php

// Include this at the beginning of every scoring key, 
// with updated numbers for the specific number of tests in each function for that problem
$attempt->queue_tests(array(
	"Compile"   => 1,  
	"Given"     => 2,
	"Format"    => 1,
	"Standard"  => 5, 
	"Random"    => 20, 
	"Edge"      => 1,
	"All"       => 30));
	//the number of tests to be run in each PHP function.

// test_Compile ensures that the source code compiles without error	
// This will probably be exactly the same for every problem
function test_Compile($i) {
	global $attempt;
	//check and see if it compiles
	return compile($attempt->compiler.$attempt->filename)
			&& source_contains_C_function("int", "fact")
			&& source_does_not_contain_regex("/for\s*\(/","for loop") 
			&& source_does_not_contain_regex("/while\s*\(/","for loop");  
}

// test_Given checks that the program runs correctly for the examples given in the problem statement;
// check formatting (header line, spacing, etc.) as little as possible
function test_Given($i) {
	$in  = array("1\n", "3\n");
	$out = array(1, 6);
	return run("./a.out",$in[$i]) && output_contains("$out[$i]");	
}

// test_Format again checks using the some of the sample data from the problem statement, 
// but also checks all formatting
function test_Format($i) {
	return run("./a.out","3\n") && output_contains_lines(<<<END
This program calculates factorials.
Enter an integer: <span class=input>3</span>

3! = 6
END
	);
}
               
function test_Standard($i) {
	$in = array(
		"6\n",
		"5\n",
		"2\n",
		"4\n",
		"7\n");
	$out = array(720,120,2,24,5040);
	
	return run("./a.out",$in[$i]) 
		&& output_contains("= $out[$i]\n"); 
	
}

function fact($i)
{
	if($i == 0 || $i == 1)
		return 1;
	return $i * fact($i-1);
}

function test_Random($i) {
	$a = rand(1,10); //choose base number
	$ans = fact($a);	
	   			
   	return run("./a.out",$a) && output_contains("$a! = $ans");
   	
   	//creates random numbers, finds the answer, and runs those numbers through the program.   	
}

function test_Edge($i) {
	$in = "0\n";	//test 0
	$out = 1;
	
	return run("./a.out",$in) && output_contains("$out"); 
}

function test_All($i) {
	$a = rand(0,12); //choose base number
	$ans = fact($a);	
	   			
   	return run("./a.out",$a) && output_contains("$a! = $ans");
   	
   	//creates random numbers, finds the answer, and runs those numbers through the program.   	
}


